name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Install dependencies
        working-directory: ./TripleFMusic/Frontend
        run: npm install

      - name: Run Vite build
        working-directory: ./TripleFMusic/Frontend
        run: npm run build

     - name: Run Vite tests
       working-directory: ./TripleFMusic/Frontend
       run: npm test

  backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Install dependencies
        working-directory: ./TripleFMusic/Backend
        run: npm install

      - name: Set up environment variables
        run: |
          echo "DB_USERNAME=root" >> $GITHUB_ENV
          echo "DB_PASSWORD=fifafu455.." >> $GITHUB_ENV
          echo "DB_NAME=musicdb" >> $GITHUB_ENV
          echo "DB_HOST=127.0.0.1" >> $GITHUB_ENV

      # - name: Run tests
      #   working-directory: ./TripleFMusic/Backend
      #   run: npm test

      - name: Start backend (optional, if needed for integration tests)
        working-directory: ./TripleFMusic/Backend
        run: npm start
        env:
          NODE_ENV: test

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Save Version
        id: version
        run: echo ::set-output name=tag::$(echo $(node -p -e "require('./package.json').version"))

      - name: Increase version
        working-directory: ./TripleFMusic # Specify the correct working directory containing package.json
        run: npm version patch

      - name: Push new version
        run: git push

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag fionablackler/tut:${{steps.version.outputs.tag}}

      - name: Push to DockerHub
        run: docker push triplef/tut:${{steps.version.outputs.tag}}
